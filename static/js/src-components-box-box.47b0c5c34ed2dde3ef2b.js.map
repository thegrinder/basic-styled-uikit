{"version":3,"sources":["/home/travis/build/thegrinder/basic-styled-uikit/src/components/Box/box.mdx","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Typography/index.js"],"names":["name","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","of","Box","__position","__code","__scope","this","Playground","Props","BoxProvider","Text","boxTheme","bgColors","neutral","primary","success","warning","danger","elevations","1","boxShadow","2","theme","bgColor","className","elevation","isMDXComponent"],"mappings":"wKAUsBA,E,0dAKhBC,GALgBD,EAIQ,UACV,IAGdE,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,eAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,eACL,sBAAQC,WAAW,MAAnB,gBACH,qBAAG,0BAAYA,WAAW,KAAvB,mBAAH,qDAAoH,0BAAYA,WAAW,KAAvB,WAApH,gEACA,uBACA,iBAAQ,CACN,GAAM,OACL,sBAAQA,WAAW,MAAnB,QACH,+DAA8C,0BAAYA,WAAW,KAAvB,mBAA9C,2DAAqK,0BAAYA,WAAW,KAAvB,WAArK,QAAiO,0BAAYA,WAAW,KAAvB,aAAjO,iBACA,YAAC,IAAD,CAAOC,GAAIC,IAAKH,QAAQ,UACxB,uBACA,iBAAQ,CACN,GAAM,WACL,sBAAQC,WAAW,MAAnB,YACH,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,6nDAA4pDC,QAAS,CACtsDP,MAAOQ,KAAOA,KAAKR,MAAQA,EAC3BS,eACAC,UACAC,gBACAP,QACAQ,UACCX,QAAQ,eACZ,WACK,IAAMY,EAAW,CACfC,SAAU,CACRC,QAAS,OACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,OAAQ,WAEVC,WAAY,CACVC,EAAG,CACDC,UAAW,2FAEbC,EAAG,CACDD,UAAW,8FAkCjB,OAAO,aA7BS,kBAAM,YAAC,IAAD,CAAaE,MAAOX,EAAUZ,QAAQ,eAChE,8BACE,4CACA,YAAC,IAAD,CAAKwB,QAAQ,UAAUC,UAAU,gBAAgBzB,QAAQ,OAAzD,WACA,YAAC,IAAD,CAAKwB,QAAQ,UAAUC,UAAU,gBAAgBzB,QAAQ,OAAzD,WACA,YAAC,IAAD,CAAKwB,QAAQ,SAASC,UAAU,gBAAgBzB,QAAQ,OAAxD,UACA,YAAC,IAAD,CAAKwB,QAAQ,UAAUC,UAAU,gBAAgBzB,QAAQ,OAAzD,WACA,YAAC,IAAD,CAAKwB,QAAQ,UAAUC,UAAU,gBAAgBzB,QAAQ,OAAzD,WAEA,qCACA,YAAC,IAAD,CAAKwB,QAAQ,UAAUC,UAAU,UAAUzB,QAAQ,OACjD,YAAC,IAAD,CAAK0B,UAAW,EAAGD,UAAU,UAAUzB,QAAQ,OAC7C,+BACA,YAAC,IAAD,CAAK0B,UAAW,EAAGD,UAAU,UAAUzB,QAAQ,OAC7C,+BACA,YAAC,IAAD,CAAK0B,UAAW,EAAGD,UAAU,UAAUzB,QAAQ,OAC7C,kCAKN,YAAC,IAAD,CAAK0B,UAAW,EAAG1B,QAAQ,OACzB,qCAOK,CAASA,QAAQ,gB,gLAOhCH,EAAW8B,gBAAiB,G,oECtG5B,+U","file":"static/js/src-components-box-box.cf4eaa9c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport BoxProvider from './BoxProvider';\nimport Box from './Box';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"boxprovider\"\n    }}><strong parentName=\"h2\">{`BoxProvider`}</strong></h2>\n    <p><inlineCode parentName=\"p\">{`<BoxProvider />`}</inlineCode>{` is responsible for passing down the theme to the `}<inlineCode parentName=\"p\">{`<Box />`}</inlineCode>{` component. It expects the theme to be of certain structure.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"box\"\n    }}><strong parentName=\"h2\">{`Box`}</strong></h2>\n    <p>{`Box component grabs the theme given to `}<inlineCode parentName=\"p\">{`<BoxProvider />`}</inlineCode>{` and applies the style defined there based on the given `}<inlineCode parentName=\"p\">{`bgColor`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`elevation`}</inlineCode>{` prop values.`}</p>\n    <Props of={Box} mdxType=\"Props\" />\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"example\"\n    }}><strong parentName=\"h3\">{`Example`}</strong></h3>\n    <Playground __position={1} __code={'() => {\\n  const boxTheme = {\\n    bgColors: {\\n      neutral: \\'#fff\\',\\n      primary: \\'#1e88e5\\',\\n      success: \\'#43a047\\',\\n      warning: \\'#fdd835\\',\\n      danger: \\'#f4511e\\',\\n    },\\n    elevations: {\\n      1: {\\n        boxShadow:\\n          \\'0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\\',\\n      },\\n      2: {\\n        boxShadow:\\n          \\'0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)\\',\\n      },\\n    },\\n  }\\n  const Example = () => (\\n    <BoxProvider theme={boxTheme}>\\n      <>\\n        <h2>Background colors:</h2>\\n        <Box bgColor=\\\"neutral\\\" className=\\\"margin-bottom\\\">\\n          neutral\\n        </Box>\\n        <Box bgColor=\\\"primary\\\" className=\\\"margin-bottom\\\">\\n          primary\\n        </Box>\\n        <Box bgColor=\\\"danger\\\" className=\\\"margin-bottom\\\">\\n          danger\\n        </Box>\\n        <Box bgColor=\\\"success\\\" className=\\\"margin-bottom\\\">\\n          success\\n        </Box>\\n        <Box bgColor=\\\"warning\\\" className=\\\"margin-bottom\\\">\\n          warning\\n        </Box>\\n\\n        <h2>Elevations:</h2>\\n        <Box bgColor=\\\"neutral\\\" className=\\\"padding\\\">\\n          <Box elevation={1} className=\\\"padding\\\">\\n            <span>one</span>\\n            <Box elevation={1} className=\\\"padding\\\">\\n              <span>one</span>\\n              <Box elevation={1} className=\\\"padding\\\">\\n                <span>one</span>\\n              </Box>\\n            </Box>\\n          </Box>\\n\\n          <Box elevation={2}>\\n            <span>two</span>\\n          </Box>\\n        </Box>\\n      </>\\n    </BoxProvider>\\n  )\\n\\n  return <Example />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      BoxProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  {() => {\n        const boxTheme = {\n          bgColors: {\n            neutral: '#fff',\n            primary: '#1e88e5',\n            success: '#43a047',\n            warning: '#fdd835',\n            danger: '#f4511e'\n          },\n          elevations: {\n            1: {\n              boxShadow: '0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)'\n            },\n            2: {\n              boxShadow: '0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)'\n            }\n          }\n        };\n\n        const Example = () => <BoxProvider theme={boxTheme} mdxType=\"BoxProvider\">\n    <>\n      <h2>Background colors:</h2>\n      <Box bgColor=\"neutral\" className=\"margin-bottom\" mdxType=\"Box\">neutral</Box>\n      <Box bgColor=\"primary\" className=\"margin-bottom\" mdxType=\"Box\">primary</Box>\n      <Box bgColor=\"danger\" className=\"margin-bottom\" mdxType=\"Box\">danger</Box>\n      <Box bgColor=\"success\" className=\"margin-bottom\" mdxType=\"Box\">success</Box>\n      <Box bgColor=\"warning\" className=\"margin-bottom\" mdxType=\"Box\">warning</Box>\n\n      <h2>Elevations:</h2>\n      <Box bgColor=\"neutral\" className=\"padding\" mdxType=\"Box\">\n        <Box elevation={1} className=\"padding\" mdxType=\"Box\">\n          <span>one</span>\n          <Box elevation={1} className=\"padding\" mdxType=\"Box\">\n            <span>one</span>\n            <Box elevation={1} className=\"padding\" mdxType=\"Box\">\n              <span>one</span>\n            </Box>\n          </Box>\n        </Box>\n\n        <Box elevation={2} mdxType=\"Box\">\n          <span>two</span>\n        </Box>\n      </Box>\n\n    </>\n  </BoxProvider>;\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","export { default as TypographyProvider } from './TypographyProvider';\nexport { default as Text } from './Text/Text';\nexport { default as Heading } from './Heading/Heading';\nexport * from './typographySelectors';\n"],"sourceRoot":""}