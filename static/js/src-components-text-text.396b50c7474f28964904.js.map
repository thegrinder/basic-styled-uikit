{"version":3,"sources":["/home/travis/build/thegrinder/basic-styled-uikit/src/components/ColorBox/colorBoxSelectors.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/ColorBox/ColorBox.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Text/StyledText.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Text/Text.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Text/Text.mdx","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Text/textSelectors.js"],"names":["getBoxBgColor","theme","bgColor","getColorBox","bgColors","getBoxBorderColor","borderColor","borderColors","propTypes","string","StyledColorBox","styled","div","_templateObject","_ref","css","_templateObject2","concat","ColorBox","props","react_default","a","createElement","color","isRequired","sizing","marginBottom","bool","StyledText","span","baseLineHeight","getBaseLineHeight","sizingStyle","getTextSizingStyle","getTextCommonStyle","getTextColor","calcLineHeight","fontSize","Text","as","rest","Object","objectWithoutProperties","Text_StyledText","esm_extends","defaultProps","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","id","index_esm","of","__position","__code","__scope","this","Playground","Props","components_Text_Text","isMDXComponent","__webpack_require__","d","__webpack_exports__","_theme_themeSelectors__WEBPACK_IMPORTED_MODULE_0__","getText","sizings","colors","common"],"mappings":"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","file":"static/js/src-components-text-text.de05aa77.js","sourcesContent":["import { getColorBox } from '../../theme/themeSelectors';\n\nexport const getBoxBgColor = (theme, bgColor) => (\n  getColorBox(theme).bgColors[bgColor]\n);\n\nexport const getBoxBorderColor = (theme, borderColor) => (\n  getColorBox(theme).borderColors[borderColor]\n);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { string } from 'prop-types';\nimport { getBoxBgColor, getBoxBorderColor } from './colorBoxSelectors';\n\nconst propTypes = {\n  /**\n   * one of: transparent, inherit, white, lightest, lighter, light, normal, dark, darker, darkest,\n   * washedPrimary, primary, washedSuccess, success, washedDanger, danger, washedWarning, warning\n   * */\n  bgColor: string,\n  /** one of: transparent, white, light, normal, dark, primary, success, warning, danger */\n  borderColor: string,\n};\n\nconst StyledColorBox = styled.div`\n  ${({ theme, bgColor, borderColor }) => css`\n    ${bgColor && `background-color: ${getBoxBgColor(theme, bgColor)};`}\n    ${borderColor && `border-color: ${getBoxBorderColor(theme, borderColor)};`}\n  `}\n`;\n\nStyledColorBox.propTypes = propTypes;\n\nconst ColorBox = props => <StyledColorBox {...props} />;\n\nColorBox.propTypes = propTypes;\n\nexport default ColorBox;\n","import styled, { css } from 'styled-components';\nimport { string, bool } from 'prop-types';\n\nimport { getBaseLineHeight, calcLineHeight } from '../../theme/typography';\nimport { getTextSizingStyle, getTextColor, getTextCommonStyle } from './textSelectors';\n\nconst propTypes = {\n  color: string.isRequired,\n  sizing: string.isRequired,\n  marginBottom: bool.isRequired,\n};\n\nconst StyledText = styled.span`\n  display: block;\n  ${({\n    theme,\n    color,\n    sizing,\n    marginBottom,\n  }) => {\n    const baseLineHeight = getBaseLineHeight(theme);\n    const sizingStyle = getTextSizingStyle(theme, sizing);\n    return css`\n      ${getTextCommonStyle(theme)}\n      color: ${getTextColor(theme, color)};\n      line-height: ${calcLineHeight(sizingStyle.fontSize, baseLineHeight)};\n      margin-bottom: ${marginBottom ? `${getBaseLineHeight(theme)}rem` : '0'};\n      ${sizingStyle}\n    `;\n  }}\n`;\n\nStyledText.propTypes = propTypes;\n\nexport default StyledText;\n","import React from 'react';\nimport { string, bool, oneOf } from 'prop-types';\nimport StyledText from './StyledText';\n\nconst propTypes = {\n  /** determines the size of the text; one of: l, m, s, xs */\n  sizing: string,\n  /** one of: white, light, default, dark, black, primary, success, warning, danger */\n  color: string,\n  /** rendered html tag */\n  as: oneOf(['span', 'p']),\n  /** if true adds a bottom margin according to vertical rhythm */\n  marginBottom: bool,\n};\n\nconst defaultProps = {\n  sizing: 'm',\n  color: 'default',\n  as: 'span',\n  marginBottom: false,\n};\n\nconst Text = ({\n  sizing,\n  color,\n  marginBottom,\n  as,\n  ...rest\n}) => (\n    <StyledText\n      as={as}\n      marginBottom={marginBottom}\n      sizing={sizing}\n      color={color}\n      {...rest}\n    />\n);\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Text from './Text';\nimport ColorBox from '../ColorBox/ColorBox';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <Props of={Text} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"text-tags\"\n    }}>{`Text tags`}</h3>\n    <Playground __position={1} __code={'<Text as=\\\"span\\\">Span tag</Text>\\n<Text as=\\\"p\\\">Paragraph tag</Text>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Text,\n      ColorBox\n    }} mdxType=\"Playground\">\n  <Text as=\"span\" mdxType=\"Text\">Span tag</Text>\n  <Text as=\"p\" mdxType=\"Text\">Paragraph tag</Text>\n    </Playground>\n    <h3 {...{\n      \"id\": \"text-sizes\"\n    }}>{`Text sizes`}</h3>\n    <Playground __position={2} __code={'<Text sizing=\\\"l\\\">Large</Text>\\n<Text sizing=\\\"m\\\">Medium</Text>\\n<Text sizing=\\\"s\\\">Small</Text>\\n<Text sizing=\\\"xs\\\">Extra small</Text>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Text,\n      ColorBox\n    }} mdxType=\"Playground\">\n  <Text sizing=\"l\" mdxType=\"Text\">Large</Text>\n  <Text sizing=\"m\" mdxType=\"Text\">Medium</Text>\n  <Text sizing=\"s\" mdxType=\"Text\">Small</Text>\n  <Text sizing=\"xs\" mdxType=\"Text\">Extra small</Text>\n    </Playground>\n    <h3 {...{\n      \"id\": \"text-colors\"\n    }}>{`Text colors`}</h3>\n    <Playground __position={3} __code={'<ColorBox bgColor=\\\"darkest\\\">\\n  <Text color=\\\"white\\\">White color Text</Text>\\n</ColorBox>\\n<Text color=\\\"light\\\">Light color Text</Text>\\n<Text color=\\\"default\\\">Default color Text</Text>\\n<Text color=\\\"dark\\\">Dark color Text</Text>\\n<Text color=\\\"black\\\">Black color Text</Text>\\n<Text color=\\\"primary\\\">Primary color Text</Text>\\n<Text color=\\\"success\\\">Success color Text</Text>\\n<Text color=\\\"danger\\\">Danger color Text</Text>\\n<Text color=\\\"warning\\\">Warning color Text</Text>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Text,\n      ColorBox\n    }} mdxType=\"Playground\">\n  <ColorBox bgColor=\"darkest\" mdxType=\"ColorBox\">\n    <Text color=\"white\" mdxType=\"Text\">White color Text</Text>\n  </ColorBox>\n  <Text color=\"light\" mdxType=\"Text\">Light color Text</Text>\n  <Text color=\"default\" mdxType=\"Text\">Default color Text</Text>\n  <Text color=\"dark\" mdxType=\"Text\">Dark color Text</Text>\n  <Text color=\"black\" mdxType=\"Text\">Black color Text</Text>\n  <Text color=\"primary\" mdxType=\"Text\">Primary color Text</Text>\n  <Text color=\"success\" mdxType=\"Text\">Success color Text</Text>\n  <Text color=\"danger\" mdxType=\"Text\">Danger color Text</Text>\n  <Text color=\"warning\" mdxType=\"Text\">Warning color Text</Text>\n    </Playground>\n    <h3 {...{\n      \"id\": \"text-with-a-bottom-margin\"\n    }}>{`Text with a bottom margin`}</h3>\n    <Playground __position={4} __code={'<Text marginBottom={true}>Text with margin</Text>\\n<Text marginBottom={true}>Text with margin</Text>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Text,\n      ColorBox\n    }} mdxType=\"Playground\">\n  <Text marginBottom={true} mdxType=\"Text\">Text with margin</Text>\n  <Text marginBottom={true} mdxType=\"Text\">Text with margin</Text>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import { getText } from '../../theme/themeSelectors';\n\nexport const getTextSizingStyle = (theme, sizing) => getText(theme).sizings[sizing] || {};\n\nexport const getTextColor = (theme, color) => getText(theme).colors[color];\n\nexport const getTextCommonStyle = theme => getText(theme).common;\n"],"sourceRoot":""}