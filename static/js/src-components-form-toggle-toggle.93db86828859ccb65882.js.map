{"version":3,"sources":["/home/travis/build/thegrinder/basic-styled-uikit/docz/Spacer.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/Icon.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/Spinner.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/InputWrapper.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/index.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/ToggleLabel.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/ToggleCheckbox.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/ToggleSlider.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/Toggle.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/Toggle.mdx","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/formSelectors.js"],"names":["Spacer","styled","div","_templateObject","Icon","span","Icon_templateObject","loading","keyframes","Spinner_templateObject","propTypes","color","string","Spinner","_templateObject2","_ref","defaultProps","maxWidth","number","InputWrapper","InputWrapper_templateObject","__webpack_require__","d","__webpack_exports__","docz_Spacer","docz_Icon","docz_Spinner","docz_InputWrapper","ToggleLabel","label","h","isRequired","ToggleCheckbox","input","attrs","type","ToggleCheckbox_templateObject","rem","theme","css","getToggleStyle","disabled","bool","ToggleSlider","ToggleSlider_templateObject","_ref2","_ref3","_ref4","_ref5","Toggle","onChange","rest","Object","objectWithoutProperties","react_default","a","createElement","Toggle_ToggleLabel","Toggle_ToggleCheckbox","esm_extends","Toggle_ToggleSlider","layoutProps","MDXLayout","MDXContent","components","props","index_es","mdxType","id","index_esm","of","__position","__code","__scope","this","Playground","Props","docz","Form_Toggle_Toggle","isMDXComponent","getRegularInputCommonStyle","getRegularInputStyle","getMiscInputCommonStyle","getMiscInputStyle","getInlineInputCommonStyle","getInlineInputStyle","_theme_themeSelectors__WEBPACK_IMPORTED_MODULE_0__","getForm","regular","common","invalid","state","states","valid","misc","inline","toggle"],"mappings":"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","file":"static/js/src-components-form-toggle-toggle.18dacc6b.js","sourcesContent":["import styled from 'styled-components';\n\nconst Spacer = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport default Spacer;\n","import styled from 'styled-components';\n\nconst Icon = styled.span`\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background-color: #222;\n  display: inline-block;\n  margin: 0 16px;\n`;\n\nexport default Icon;\n","import styled, { keyframes } from 'styled-components';\nimport { string } from 'prop-types';\n\nconst loading = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst propTypes = {\n  color: string,\n};\n\nconst defaultProps = {\n  color: '#fff',\n};\n\nconst Spinner = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 100%;\n  border: 2px solid ${({ color }) => color};\n  border-bottom-color: transparent;\n  animation: ${loading} 0.75s 0s infinite linear;\n  vertical-align: middle;\n  display: inline-block;\n`;\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\n\nexport default Spinner;\n","import styled from 'styled-components';\nimport { number } from 'prop-types';\n\nconst propTypes = {\n  maxWidth: number,\n};\n\nconst defaultProps = {\n  maxWidth: 300,\n};\n\nconst InputWrapper = styled.div`\n  max-width: ${({ maxWidth }) => maxWidth}px;\n`;\n\nInputWrapper.propTypes = propTypes;\nInputWrapper.defaultProps = defaultProps;\n\nexport default InputWrapper;\n","export { default as Spacer } from './Spacer';\nexport { default as Icon } from './Icon';\nexport { default as Spinner } from './Spinner';\nexport { default as InputWrapper } from './InputWrapper';\n","import styled from 'styled-components';\n\nconst ToggleLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport default ToggleLabel;\n","import styled, { css } from 'styled-components';\nimport { number } from 'prop-types';\nimport { getToggleStyle } from '../formSelectors';\nimport { rem } from '../../../theme/typography';\n\nconst propTypes = {\n  h: number.isRequired,\n};\n\nconst ToggleCheckbox = styled.input.attrs({\n  type: 'checkbox',\n})`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n  & + span:before {\n    left: ${rem(4)};\n  }\n  ${({ theme, h }) => css`\n    & + span {\n      ${getToggleStyle(theme, 'normal')}\n    }\n    &:checked + span {\n      ${getToggleStyle(theme, 'checked')}\n    }\n    &:checked + span:before {\n      left: calc(100% - ${rem(h - 4)});\n    }\n  `}\n`;\n\nToggleCheckbox.propTypes = propTypes;\n\nexport default ToggleCheckbox;\n","import styled from 'styled-components';\nimport { number, bool } from 'prop-types';\nimport { rem } from '../../../theme/typography';\n\nconst propTypes = {\n  h: number.isRequired,\n  disabled: bool.isRequired,\n};\n\nconst ToggleSlider = styled.span`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: ${({ h }) => rem(h)};\n  border-radius: 9999px;\n  transition: background-color .2s;\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    transition: left .2s;\n    bottom: 0;\n    margin: auto;\n    height: ${({ h }) => rem(h - 8)};\n    width: ${({ h }) => rem(h - 8)};\n    background-color: #fff;\n    border-radius: 100%;\n  }\n`;\n\nToggleSlider.propTypes = propTypes;\n\nexport default ToggleSlider;\n","import React from 'react';\nimport { number, bool, func } from 'prop-types';\nimport ToggleLabel from './ToggleLabel';\nimport ToggleCheckbox from './ToggleCheckbox';\nimport ToggleSlider from './ToggleSlider';\n\nconst propTypes = {\n  /** height of the Toggle */\n  h: number,\n  /** disabled flag */\n  disabled: bool,\n  /** onChange handler */\n  onChange: func.isRequired,\n};\n\nconst defaultProps = {\n  h: 34,\n  disabled: false,\n};\n\nconst Toggle = ({\n  h,\n  disabled,\n  onChange,\n  ...rest\n}) => (\n  <ToggleLabel>\n    <ToggleCheckbox\n      h={h}\n      onChange={onChange}\n      disabled={disabled}\n      {...rest}\n    />\n    <ToggleSlider h={h} disabled={disabled}/>\n  </ToggleLabel>\n);\n\nToggle.propTypes = propTypes;\nToggle.defaultProps = defaultProps;\n\nexport default Toggle;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Toggle from './Toggle';\nimport { InputWrapper } from '../../../../docz';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h1>\n    <Props of={Toggle} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"toggle-1\"\n    }}>{`Toggle`}</h3>\n    <Playground __position={1} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle onChange={() => {}} />\\n</InputWrapper>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      InputWrapper\n    }} mdxType=\"Playground\">\n  <InputWrapper maxWidth={70} mdxType=\"InputWrapper\">\n    <Toggle onChange={() => {}} mdxType=\"Toggle\" />\n  </InputWrapper>\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-toggle\"\n    }}>{`Disabled Toggle`}</h3>\n    <Playground __position={2} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle disabled={true} onChange={() => {}} />\\n</InputWrapper>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      InputWrapper\n    }} mdxType=\"Playground\">\n  <InputWrapper maxWidth={70} mdxType=\"InputWrapper\">\n    <Toggle disabled={true} onChange={() => {}} mdxType=\"Toggle\" />\n  </InputWrapper>\n    </Playground>\n    <h3 {...{\n      \"id\": \"toggle-with-a-custom-height\"\n    }}>{`Toggle with a custom height`}</h3>\n    <Playground __position={3} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle h={24} onChange={() => {}} />\\n</InputWrapper>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      InputWrapper\n    }} mdxType=\"Playground\">\n  <InputWrapper maxWidth={70} mdxType=\"InputWrapper\">\n    <Toggle h={24} onChange={() => {}} mdxType=\"Toggle\" />\n  </InputWrapper>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import { getForm } from '../../theme/themeSelectors';\n\nexport const getRegularInputCommonStyle = theme => getForm(theme).regular.common;\nexport const getRegularInputStyle = (theme, invalid, state) => {\n  const { states } = getForm(theme).regular;\n  return invalid\n    ? states.invalid\n    : states.valid[state];\n};\n\nexport const getMiscInputCommonStyle = theme => getForm(theme).misc.common;\nexport const getMiscInputStyle = (theme, invalid, state) => {\n  const { states } = getForm(theme).misc;\n  return invalid && state === 'normal'\n    ? states.invalid\n    : states.valid[state];\n};\n\nexport const getInlineInputCommonStyle = theme => getForm(theme).inline.common;\nexport const getInlineInputStyle = (theme, invalid, state) => {\n  const { states } = getForm(theme).inline;\n  return invalid\n    ? states.invalid\n    : states.valid[state];\n};\n\nexport const getToggleStyle = (theme, state) => getForm(theme).toggle.states[state];\n"],"sourceRoot":""}