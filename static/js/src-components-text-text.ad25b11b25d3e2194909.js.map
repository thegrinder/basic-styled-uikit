{"version":3,"sources":["webpack:///./src/components/ColorBox/colorBoxHelpers.js","webpack:///./src/components/ColorBox/ColorBox.js","webpack:///./src/components/Text/StyledText.js","webpack:///./src/components/Text/Text.js","webpack:///./src/components/Text/Text.mdx","webpack:///./src/components/Text/textHelpers.js"],"names":["getBoxBgColor","theme","bgColor","uiKit","colorBox","bgColors","propTypes","string","borderColor","StyledColorBox","styled","div","withConfig","displayName","componentId","_ref","css","_ref2","boxBorderColor","borderColors","getBoxBorderColor","ColorBox","props","react_default","a","createElement","color","isRequired","sizing","marginBottom","bool","StyledText","span","textCommonStyle","textSizingStyle","textColorStyle","calcLineHeight","getTextSizing","fontSize","getBaseLineHeight","concat","Text","as","rest","_objectWithoutProperties","Text_StyledText","Object","assign","defaultProps","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","Text_objectWithoutProperties","dist","name","id","index_m","of","__position","__code","__scope","components_Text_Text","__webpack_require__","d","__webpack_exports__","styled_components__WEBPACK_IMPORTED_MODULE_0__","_helpers_utils__WEBPACK_IMPORTED_MODULE_1__","text","sizings","getStyle","colors","getTextColor","_ref3","common"],"mappings":"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","file":"static/js/src-components-text-text.8d86e4a1.js","sourcesContent":["import { css } from 'styled-components';\n\nexport const getBoxBgColor = (theme, bgColor) => (\n  theme.uiKit.colorBox.bgColors[bgColor]\n);\nexport const colorBoxBgStyle = ({ theme, bgColor }) => {\n  const boxBgColor = getBoxBgColor(theme, bgColor);\n  return boxBgColor\n    ? css`background-color: ${getBoxBgColor(theme, bgColor)};`\n    : '';\n};\n\nexport const getBoxBorderColor = (theme, borderColor) => (\n  theme.uiKit.colorBox.borderColors[borderColor]\n);\nexport const colorBoxBorderStyle = ({ theme, borderColor }) => {\n  const boxBorderColor = getBoxBorderColor(theme, borderColor);\n  return boxBorderColor\n    ? css`border-color: ${boxBorderColor};`\n    : '';\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { string } from 'prop-types';\nimport { colorBoxBgStyle, colorBoxBorderStyle } from './colorBoxHelpers';\n\nconst propTypes = {\n  /**\n   * one of: transparent, inherit, white, lightest, lighter, light, normal, dark, darker, darkest,\n   * washedPrimary, primary, washedSuccess, success, washedDanger, danger, washedWarning, warning\n   * */\n  bgColor: string,\n  /** one of: transparent, white, light, normal, dark, primary, success, warning, danger */\n  borderColor: string,\n};\n\nconst StyledColorBox = styled.div`\n  box-sizing: border-box;\n  ${colorBoxBgStyle}\n  ${colorBoxBorderStyle}\n`;\n\nStyledColorBox.propTypes = propTypes;\n\nconst ColorBox = props => <StyledColorBox {...props} />;\n\nColorBox.propTypes = propTypes;\n\nexport default ColorBox;\n","import styled from 'styled-components';\nimport { string, bool } from 'prop-types';\nimport { getBaseLineHeight } from '../../theme/typography';\nimport { calcLineHeight } from '../../helpers/utils';\nimport {\n  getTextSizing,\n  textSizingStyle,\n  textColorStyle,\n  textCommonStyle,\n} from './textHelpers';\n\nconst propTypes = {\n  color: string.isRequired,\n  sizing: string.isRequired,\n  marginBottom: bool.isRequired,\n};\n\nconst StyledText = styled.span`\n  display: block;\n  margin: 0;\n  padding: 0;\n  ${textCommonStyle}\n  ${textSizingStyle}\n  ${textColorStyle}\n  line-height: ${props => calcLineHeight(\n    getTextSizing(props).fontSize,\n    getBaseLineHeight(props),\n  )};\n  margin-bottom: ${props => (props.marginBottom ? `${getBaseLineHeight(props)}rem` : '0')};\n`;\n\nStyledText.propTypes = propTypes;\n\nexport default StyledText;\n","import React from 'react';\nimport { string, bool } from 'prop-types';\nimport StyledText from './StyledText';\n\nconst propTypes = {\n  /** determines the size of the text; one of: l, m, s, xs */\n  sizing: string,\n  /** one of: white, light, default, dark, black, primary, success, warning, danger */\n  color: string,\n  /** determines the html tag; one of: p, span */\n  as: string,\n  /** if true adds a bottom margin according to vertical rhythm */\n  marginBottom: bool,\n};\n\nconst defaultProps = {\n  sizing: 'm',\n  color: 'default',\n  as: 'span',\n  marginBottom: false,\n};\n\nconst Text = ({\n  sizing,\n  color,\n  marginBottom,\n  as,\n  ...rest\n}) => (\n  <StyledText\n    as={as}\n    marginBottom={marginBottom}\n    sizing={sizing}\n    color={color}\n    {...rest}\n  />\n);\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Text from './Text';\nimport ColorBox from '../ColorBox/ColorBox';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"text\"}}>{`Text`}</MDXTag>\n<PropsTable of={Text} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"text-tags\"}}>{`Text tags`}</MDXTag>\n<Playground __position={1} __code={'<Text as=\\\"span\\\">Span tag</Text>\\n<Text as=\\\"p\\\">Paragraph tag</Text>'} __scope={{props: this ? this.props : props,Text,ColorBox}}>\n  <Text as=\"span\">Span tag</Text>\n  <Text as=\"p\">Paragraph tag</Text>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"text-sizes\"}}>{`Text sizes`}</MDXTag>\n<Playground __position={2} __code={'<Text sizing=\\\"l\\\">Large</Text>\\n<Text sizing=\\\"m\\\">Medium</Text>\\n<Text sizing=\\\"s\\\">Small</Text>\\n<Text sizing=\\\"xs\\\">Extra small</Text>'} __scope={{props: this ? this.props : props,Text,ColorBox}}>\n  <Text sizing=\"l\">Large</Text>\n  <Text sizing=\"m\">Medium</Text>\n  <Text sizing=\"s\">Small</Text>\n  <Text sizing=\"xs\">Extra small</Text>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"text-colors\"}}>{`Text colors`}</MDXTag>\n<Playground __position={3} __code={'<ColorBox bgColor=\\\"darkest\\\">\\n  <Text color=\\\"white\\\">White color Text</Text>\\n</ColorBox>\\n<Text color=\\\"light\\\">Light color Text</Text>\\n<Text color=\\\"default\\\">Default color Text</Text>\\n<Text color=\\\"dark\\\">Dark color Text</Text>\\n<Text color=\\\"black\\\">Black color Text</Text>\\n<Text color=\\\"primary\\\">Primary color Text</Text>\\n<Text color=\\\"success\\\">Success color Text</Text>\\n<Text color=\\\"danger\\\">Danger color Text</Text>\\n<Text color=\\\"warning\\\">Warning color Text</Text>'} __scope={{props: this ? this.props : props,Text,ColorBox}}>\n  <ColorBox bgColor=\"darkest\">\n    <Text color=\"white\">White color Text</Text>\n  </ColorBox>\n  <Text color=\"light\">Light color Text</Text>\n  <Text color=\"default\">Default color Text</Text>\n  <Text color=\"dark\">Dark color Text</Text>\n  <Text color=\"black\">Black color Text</Text>\n  <Text color=\"primary\">Primary color Text</Text>\n  <Text color=\"success\">Success color Text</Text>\n  <Text color=\"danger\">Danger color Text</Text>\n  <Text color=\"warning\">Warning color Text</Text>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"text-with-a-bottom-margin\"}}>{`Text with a bottom margin`}</MDXTag>\n<Playground __position={4} __code={'<Text marginBottom={true}>Text with margin</Text>\\n<Text marginBottom={true}>Text with margin</Text>'} __scope={{props: this ? this.props : props,Text,ColorBox}}>\n  <Text marginBottom={true}>Text with margin</Text>\n  <Text marginBottom={true}>Text with margin</Text>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import { css } from 'styled-components';\nimport { getStyle } from '../../helpers/utils';\n\nexport const getTextSizing = ({ theme, sizing }) => theme.uiKit.text.sizings[sizing];\nexport const textSizingStyle = getStyle(getTextSizing);\n\nconst getTextColor = (theme, color) => theme.uiKit.text.colors[color];\nexport const textColorStyle = ({ theme, color }) => (\n  css`color: ${getTextColor(theme, color)};`\n);\n\nconst getTextCommonStyle = ({ theme }) => theme.uiKit.text.common;\nexport const textCommonStyle = getStyle(getTextCommonStyle);\n"],"sourceRoot":""}