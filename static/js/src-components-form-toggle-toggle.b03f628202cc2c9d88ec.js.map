{"version":3,"sources":["webpack:///./docz/Spacer.js","webpack:///./docz/Icon.js","webpack:///./docz/Spinner.js","webpack:///./docz/InputWrapper.js","webpack:///./src/components/Form/Toggle/ToggleLabel.js","webpack:///./src/components/Form/Toggle/ToggleCheckbox.js","webpack:///./src/components/Form/Toggle/ToggleSlider.js","webpack:///./src/components/Form/Toggle/Toggle.js","webpack:///./src/components/Form/Toggle/Toggle.mdx","webpack:///./src/components/Form/formHelpers.js"],"names":["Spacer","styled","div","withConfig","displayName","componentId","Icon","span","loading","keyframes","propTypes","color","string","Spinner","_ref","defaultProps","maxWidth","number","InputWrapper","ToggleLabel","label","h","isRequired","ToggleCheckbox","input","attrs","type","toggleNormalStyle","toggleCheckedStyle","rem","disabled","bool","ToggleSlider","_ref2","_ref3","_ref4","_ref5","Toggle","onChange","rest","_objectWithoutProperties","react_default","a","createElement","Toggle_ToggleLabel","Toggle_ToggleCheckbox","Object","assign","Toggle_ToggleSlider","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","Toggle_objectWithoutProperties","dist","name","id","index_m","of","__position","__code","__scope","docz","Form_Toggle_Toggle","__webpack_require__","d","__webpack_exports__","inputNormalStyle","inputActiveStyle","inputDisabledStyle","inputCommonStyle","miscNormalStyle","miscActiveStyle","miscCheckedStyle","miscCommonStyle","inlineInputNormalStyle","inlineInputHoverStyle","inlineInputActiveStyle","inlineInputDisabledStyle","inlineInputCommonStyle","_helpers_utils__WEBPACK_IMPORTED_MODULE_0__","getRegularInput","state","theme","invalid","states","uiKit","form","regular","valid","getRegularInputStyle","getStyle","common","getMiscInput","misc","getMiscInputStyle","getInlineInput","_ref6","inline","getInlineInputStyle","getToggle","_ref7","toggle","getToggleStyle"],"mappings":"2LAMeA,EAJAC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,SAAAC,YAAA,gBAAGJ,CAAH,yBCSGK,EATFL,IAAOM,KAAVJ,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGJ,CAAH,kJCCJO,EAAUC,YAAH,gEAKPC,EAAY,CAChBC,MAAOC,UAOHC,EAAUZ,IAAOM,KAAVJ,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,sLAIS,SAAAa,GAAA,OAAAA,EAAGH,OAEVH,GAKfK,EAAQH,UAAYA,EACpBG,EAAQE,aAhBa,CACnBJ,MAAO,QAiBME,QC3BTH,EAAY,CAChBM,SAAUC,UAONC,EAAejB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,qBACH,SAAAa,GAAA,OAAAA,EAAGE,WAGlBE,EAAaR,UAAYA,EACzBQ,EAAaH,aATQ,CACnBC,SAAU,KAUGE,kbCXAC,EALKlB,IAAOmB,MAAVjB,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,0JCGXS,EAAY,CAChBW,EAAGJ,SAAOK,YAGNC,EAAiBtB,IAAOuB,MAAMC,MAAM,CACxCC,KAAM,aADYvB,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,6HAKd0B,IAGAC,IAGMC,YAAI,GAGQ,SAAAf,GAAA,IAAGO,EAAHP,EAAGO,EAAH,OAAWQ,YAAIR,EAAI,KAI3CE,EAAeb,UAAYA,EAEZa,QCzBTb,EAAY,CAChBW,EAAGJ,SAAOK,WACVQ,SAAUC,OAAKT,YAGXU,EAAe/B,IAAOM,KAAVJ,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,wTAIN,SAAAa,GAAA,IAAGO,EAAHP,EAAGO,EAAH,OAAWQ,YAAIR,IAGf,SAAAY,GAAA,OAAAA,EAAGH,SAA2B,UAAY,WACzC,SAAAI,GAAA,OAAAA,EAAGJ,SAA2B,GAAM,GAQnC,SAAAK,GAAA,IAAGd,EAAHc,EAAGd,EAAH,OAAWQ,YAAIR,EAAI,IACpB,SAAAe,GAAA,IAAGf,EAAHe,EAAGf,EAAH,OAAWQ,YAAIR,EAAI,KAOhCW,EAAatB,UAAYA,EAEVsB,4XCpBf,IAKMK,EAAS,SAAAvB,GAAA,IACbO,EADaP,EACbO,EACAS,EAFahB,EAEbgB,SACAQ,EAHaxB,EAGbwB,SACGC,EAJUC,EAAA1B,EAAA,oCAMb2B,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAADC,OAAAC,OAAA,CACE1B,EAAGA,EACHiB,SAAUA,EACVR,SAAUA,GACNS,IAENE,EAAAC,EAAAC,cAACK,EAAD,CAAc3B,EAAGA,EAAGS,SAAUA,MAKlCO,EAAOtB,aAvBc,CACnBM,EAAG,GACHS,UAAU,GAuBGO,0lDCjCMY,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WAAeX,EADhBY,EAAAF,EAAA,gBAGP,OAAOnB,EAAAC,EAAAC,cAACoB,EAAA,OAAD,CACEC,KAAK,UAELH,WAAYA,GACzBpB,EAAAC,EAAAC,cAACoB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,WAAvD,UACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,GAAI9B,IAChBI,EAAAC,EAAAC,cAACoB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,aAAvD,UACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYE,WAAY,EAAGC,OAAQ,kFAAmFC,QAAS,CAACpB,MAAOG,KAAOA,KAAKH,MAAQA,EAAMb,SAAOnB,mBACtKuB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcvD,SAAU,IACtByB,EAAAC,EAAAC,cAAC6B,EAAD,CAAQlC,SAAU,iBAGtBG,EAAAC,EAAAC,cAACoB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,oBAAvD,mBACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYE,WAAY,EAAGC,OAAQ,kGAAmGC,QAAS,CAACpB,MAAOG,KAAOA,KAAKH,MAAQA,EAAMb,SAAOnB,mBACtLuB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcvD,SAAU,IACtByB,EAAAC,EAAAC,cAAC6B,EAAD,CAAQ1C,UAAU,EAAMQ,SAAU,iBAGtCG,EAAAC,EAAAC,cAACoB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,gCAAvD,+BACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYE,WAAY,EAAGC,OAAQ,yFAA0FC,QAAS,CAACpB,MAAOG,KAAOA,KAAKH,MAAQA,EAAMb,SAAOnB,mBAC7KuB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcvD,SAAU,IACtByB,EAAAC,EAAAC,cAAC6B,EAAD,CAAQnD,EAAG,GAAIiB,SAAU,gMCpC7BmC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAhD,IAAA8C,EAAAC,EAAAC,EAAA,sBAAA/C,IAAA,IAAA6D,EAAAhB,EAAA,0BAGMiB,EAAkB,SAAAzD,EAAqB0D,GAAU,IAA5BC,EAA4B3D,EAA5B2D,MAAOC,EAAqB5D,EAArB4D,QACxBC,EAAWF,EAAMG,MAAMC,KAAKC,QAA5BH,OACR,OAAOD,EACHC,EAAOD,QACPC,EAAOI,MAAMP,IAEbQ,EAAuB,SAAAR,GAAK,OAAIS,YAASV,EAAiBC,IAEnDf,EAAmBuB,EAAqB,UACxCtB,EAAmBsB,EAAqB,UACxCrB,EAAqBqB,EAAqB,YAC1CpB,EAAmBqB,YAZG,SAAAtF,GAAA,OAAAA,EAAG8E,MAAkBG,MAAMC,KAAKC,QAAQI,SAgBrEC,EAAe,SAAAnE,EAAqBwD,GAAU,IAA5BC,EAA4BzD,EAA5ByD,MAAOC,EAAqB1D,EAArB0D,QACrBC,EAAWF,EAAMG,MAAMC,KAAKO,KAA5BT,OACR,OAAOD,GAAqB,WAAVF,EACdG,EAAOD,QACPC,EAAOI,MAAMP,IAGba,EAAoB,SAAAb,GAAK,OAAIS,YAASE,EAAcX,IAE7CX,EAAkBwB,EAAkB,UACpCvB,EAAkBuB,EAAkB,UACpCtB,EAAmBsB,EAAkB,WACrCrB,EAAkBiB,YAbC,SAAAlE,GAAA,OAAAA,EAAG0D,MAAkBG,MAAMC,KAAKO,KAAKF,SAiB/DI,EAAiB,SAAAC,EAAqBf,GAAU,IAA5BC,EAA4Bc,EAA5Bd,MAAOC,EAAqBa,EAArBb,QACvBC,EAAWF,EAAMG,MAAMC,KAAKW,OAA5Bb,OACR,OAAOD,EACHC,EAAOD,QACPC,EAAOI,MAAMP,IAGbiB,EAAsB,SAAAjB,GAAK,OAAIS,YAASK,EAAgBd,IAEjDP,EAAyBwB,EAAoB,UAC7CvB,EAAwBuB,EAAoB,SAC5CtB,EAAyBsB,EAAoB,UAC7CrB,EAA2BqB,EAAoB,YAC/CpB,EAAyBY,YAdJ,SAAAhE,GAAA,OAAAA,EAAGwD,MAAkBG,MAAMC,KAAKW,OAAON,SAiBnEQ,EAAY,SAAAC,EAAYnB,GAAZ,OAAAmB,EAAGlB,MAAyBG,MAAMC,KAAKe,OAAOjB,OAAOH,IACjEqB,EAAiB,SAAArB,GAAK,OAAIS,YAASS,EAAWlB,IACvChE,EAAoBqF,EAAe,UACnCpF,EAAqBoF,EAAe","file":"static/js/src-components-form-toggle-toggle.685506b2.js","sourcesContent":["import styled from 'styled-components';\n\nconst Spacer = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport default Spacer;\n","import styled from 'styled-components';\n\nconst Icon = styled.span`\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background-color: #222;\n  display: inline-block;\n  margin: 0 16px;\n`;\n\nexport default Icon;\n","import styled, { keyframes } from 'styled-components';\nimport { string } from 'prop-types';\n\nconst loading = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst propTypes = {\n  color: string,\n};\n\nconst defaultProps = {\n  color: '#fff',\n};\n\nconst Spinner = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 100%;\n  border: 2px solid ${({ color }) => color};\n  border-bottom-color: transparent;\n  animation: ${loading} 0.75s 0s infinite linear;\n  vertical-align: middle;\n  display: inline-block;\n`;\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\n\nexport default Spinner;\n","import styled from 'styled-components';\nimport { number } from 'prop-types';\n\nconst propTypes = {\n  maxWidth: number,\n};\n\nconst defaultProps = {\n  maxWidth: 300,\n};\n\nconst InputWrapper = styled.div`\n  max-width: ${({ maxWidth }) => maxWidth}px;\n`;\n\nInputWrapper.propTypes = propTypes;\nInputWrapper.defaultProps = defaultProps;\n\nexport default InputWrapper;\n","import styled from 'styled-components';\n\nconst ToggleLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport default ToggleLabel;\n","import styled from 'styled-components';\nimport { number } from 'prop-types';\nimport { toggleNormalStyle, toggleCheckedStyle } from '../formHelpers';\nimport { rem } from '../../../helpers/utils';\n\nconst propTypes = {\n  h: number.isRequired,\n};\n\nconst ToggleCheckbox = styled.input.attrs({\n  type: 'checkbox',\n})`\n  display: none;\n  & + span {\n    ${toggleNormalStyle}\n  }\n  &:checked + span {\n    ${toggleCheckedStyle}\n  }\n  & + span:before {\n    left: ${rem(4)};\n  }\n  &:checked + span:before {\n    left: calc(100% - ${({ h }) => rem(h - 4)});\n  }\n`;\n\nToggleCheckbox.propTypes = propTypes;\n\nexport default ToggleCheckbox;\n","import styled from 'styled-components';\nimport { number, bool } from 'prop-types';\nimport { rem } from '../../../helpers/utils';\n\nconst propTypes = {\n  h: number.isRequired,\n  disabled: bool.isRequired,\n};\n\nconst ToggleSlider = styled.span`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: ${({ h }) => rem(h)};\n  border-radius: 9999px;\n  transition: background-color .2s;\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    transition: left .2s;\n    bottom: 0;\n    margin: auto;\n    height: ${({ h }) => rem(h - 8)};\n    width: ${({ h }) => rem(h - 8)};\n    box-sizing: border-box;\n    background-color: #fff;\n    border-radius: 100%;\n  }\n`;\n\nToggleSlider.propTypes = propTypes;\n\nexport default ToggleSlider;\n","import React from 'react';\nimport { number, bool, func } from 'prop-types';\nimport ToggleLabel from './ToggleLabel';\nimport ToggleCheckbox from './ToggleCheckbox';\nimport ToggleSlider from './ToggleSlider';\n\nconst propTypes = {\n  /** height of the Toggle */\n  h: number,\n  /** disabled flag */\n  disabled: bool,\n  /** onChange handler */\n  onChange: func.isRequired,\n};\n\nconst defaultProps = {\n  h: 34,\n  disabled: false,\n};\n\nconst Toggle = ({\n  h,\n  disabled,\n  onChange,\n  ...rest\n}) => (\n  <ToggleLabel>\n    <ToggleCheckbox\n      h={h}\n      onChange={onChange}\n      disabled={disabled}\n      {...rest}\n    />\n    <ToggleSlider h={h} disabled={disabled}/>\n  </ToggleLabel>\n);\n\nToggle.propTypes = propTypes;\nToggle.defaultProps = defaultProps;\n\nexport default Toggle;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Toggle from './Toggle';\nimport { InputWrapper } from '../../../../docz';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"toggle\"}}>{`Toggle`}</MDXTag>\n<PropsTable of={Toggle} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"toggle-1\"}}>{`Toggle`}</MDXTag>\n<Playground __position={1} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle onChange={() => {}} />\\n</InputWrapper>'} __scope={{props: this ? this.props : props,Toggle,InputWrapper}}>\n  <InputWrapper maxWidth={70}>\n    <Toggle onChange={() => {}} />\n  </InputWrapper>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"disabled-toggle\"}}>{`Disabled Toggle`}</MDXTag>\n<Playground __position={2} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle disabled={true} onChange={() => {}} />\\n</InputWrapper>'} __scope={{props: this ? this.props : props,Toggle,InputWrapper}}>\n  <InputWrapper maxWidth={70}>\n    <Toggle disabled={true} onChange={() => {}} />\n  </InputWrapper>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"toggle-with-a-custom-height\"}}>{`Toggle with a custom height`}</MDXTag>\n<Playground __position={3} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle h={24} onChange={() => {}} />\\n</InputWrapper>'} __scope={{props: this ? this.props : props,Toggle,InputWrapper}}>\n  <InputWrapper maxWidth={70}>\n    <Toggle h={24} onChange={() => {}} />\n  </InputWrapper>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import { getStyle } from '../../helpers/utils';\n\nconst getRegularInputCommonStyle = ({ theme }) => theme.uiKit.form.regular.common;\nconst getRegularInput = ({ theme, invalid }, state) => {\n  const { states } = theme.uiKit.form.regular;\n  return invalid\n    ? states.invalid\n    : states.valid[state];\n};\nconst getRegularInputStyle = state => getStyle(getRegularInput, state);\n\nexport const inputNormalStyle = getRegularInputStyle('normal');\nexport const inputActiveStyle = getRegularInputStyle('active');\nexport const inputDisabledStyle = getRegularInputStyle('disabled');\nexport const inputCommonStyle = getStyle(getRegularInputCommonStyle);\n\n\nconst getMiscInputCommonStyle = ({ theme }) => theme.uiKit.form.misc.common;\nconst getMiscInput = ({ theme, invalid }, state) => {\n  const { states } = theme.uiKit.form.misc;\n  return invalid && state === 'normal'\n    ? states.invalid\n    : states.valid[state];\n};\n\nconst getMiscInputStyle = state => getStyle(getMiscInput, state);\n\nexport const miscNormalStyle = getMiscInputStyle('normal');\nexport const miscActiveStyle = getMiscInputStyle('active');\nexport const miscCheckedStyle = getMiscInputStyle('checked');\nexport const miscCommonStyle = getStyle(getMiscInputCommonStyle);\n\n\nconst getInlineInputCommonStyle = ({ theme }) => theme.uiKit.form.inline.common;\nconst getInlineInput = ({ theme, invalid }, state) => {\n  const { states } = theme.uiKit.form.inline;\n  return invalid\n    ? states.invalid\n    : states.valid[state];\n};\n\nconst getInlineInputStyle = state => getStyle(getInlineInput, state);\n\nexport const inlineInputNormalStyle = getInlineInputStyle('normal');\nexport const inlineInputHoverStyle = getInlineInputStyle('hover');\nexport const inlineInputActiveStyle = getInlineInputStyle('active');\nexport const inlineInputDisabledStyle = getInlineInputStyle('disabled');\nexport const inlineInputCommonStyle = getStyle(getInlineInputCommonStyle);\n\n\nconst getToggle = ({ theme }, state) => theme.uiKit.form.toggle.states[state];\nconst getToggleStyle = state => getStyle(getToggle, state);\nexport const toggleNormalStyle = getToggleStyle('normal');\nexport const toggleCheckedStyle = getToggleStyle('checked');\n"],"sourceRoot":""}