{"version":3,"sources":["/home/travis/build/thegrinder/basic-styled-uikit/src/components/Link/LinkProvider.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Link/linkSelectors.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Link/StyledLink.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Link/Link.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Link/link.mdx","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Typography/index.js"],"names":["LinkProvider","createProvider","getLink","createSelector","getLinkTypeStyle","theme","linktype","state","linkTypes","getLinkCommonStyle","common","propTypes","sizing","string","isRequired","StyledLink","styled","a","css","getTextSizingStyle","Link","linkType","as","rest","name","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","of","__position","__code","__scope","this","Playground","Props","TypographyProvider","default","normal","color","hover","muted","fontFamily","Typography","className","isMDXComponent"],"mappings":"4iBAEMA,EAAeC,YAAe,QAErBD,I,sfCFFE,EAAUC,YAAe,Q,+MAE/B,IAAMC,EAAmB,SAACC,EAAOC,EAAUC,GAAlB,2BAC9BL,EAAQG,UADsB,uBAC9B,EAAgBG,iBADc,uBAC9B,EAA4BF,UADE,aAC9B,EAAwCC,I,gMAEnC,IAAME,EAAqB,SAAAJ,GAAK,uBAAIH,EAAQG,UAAZ,aAAI,EAAgBK,Q,wsBCF3D,IAAMC,EAAY,CAChBC,OAAQC,SAAOC,WACfR,SAAUO,SAAOC,YAGbC,EAAaC,IAAOC,EAAV,KAeZ,gBAAGZ,EAAH,EAAGA,MAAOO,EAAV,EAAUA,OAAQN,EAAlB,EAAkBA,SAAlB,OAAiCY,YAAhC,IACCT,EAAmBJ,GACnBc,YAAmBd,EAAOO,GAC1BR,EAAiBC,EAAOC,EAAU,UAEhCF,EAAiBC,EAAOC,EAAU,aAK1CS,EAAWJ,UAAYA,EAERI,Q,+MCxBf,IAAMK,EAAO,SAAC,GAAD,QACXR,cADW,MACF,IADE,MAEXS,SAAUf,OAFC,MAEU,UAFV,MAGXgB,UAHW,MAGN,IAHM,EAIRC,EAJQ,iDAKP,kBAAC,EAAD,aAAYX,OAAQA,EAAQN,SAAUA,EAAUgB,GAAIA,GAAQC,KAInDH,I,mNCZOI,EAIQ,UAJ9B,IAAsBA,EAKhBC,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,eAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,gBACL,sBAAQC,WAAW,MAAnB,iBACH,qBAAG,0BAAYA,WAAW,KAAvB,oBAAH,qDAAqH,0BAAYA,WAAW,KAAvB,YAArH,gEACA,uBACA,iBAAQ,CACN,GAAM,QACL,sBAAQA,WAAW,MAAnB,SACH,gEAA+C,0BAAYA,WAAW,KAAvB,oBAA/C,2DAAuK,0BAAYA,WAAW,KAAvB,YAAvK,gBACA,YAAC,IAAD,CAAOC,GAAIZ,EAAMU,QAAQ,UACzB,uBACA,iBAAQ,CACN,GAAM,WACL,sBAAQC,WAAW,MAAnB,YACH,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,m0BAA80BC,QAAS,CACx3BN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,eACAC,UACAC,uBACAvC,eACAoB,QACCU,QAAQ,eACZ,WACK,IAAMzB,EAAQ,CACZG,UAAW,CACTgC,QAAS,CACPC,OAAQ,CACNC,MAAO,WAETC,MAAO,CACLD,MAAO,YAGXE,MAAO,CACLH,OAAQ,CACNC,MAAO,WAETC,MAAO,CACLD,MAAO,aAIbhC,OAAQ,CACNmC,WAAW,4BAgBf,OAAO,aAZS,kBAEhB,WADA,CACCC,EAAA,EAAD,CAAoBhB,QAAQ,sBAChC,YAAC,EAAD,CAAczB,MAAOA,EAAOyB,QAAQ,gBAClC,8BACE,qCACA,YAAC,EAAD,CAAMiB,UAAU,gBAAgBjB,QAAQ,QAAxC,gBACA,YAAC,EAAD,CAAMT,SAAS,QAAQS,QAAQ,QAA/B,mBAKO,CAASA,QAAQ,eAG5B,wB,kLAKJH,EAAWqB,gBAAiB,G,oEC5F5B,+U","file":"static/js/src-components-link-link.c5f1ac2f.js","sourcesContent":["import { createProvider } from '../../helpers';\n\nconst LinkProvider = createProvider('link');\n\nexport default LinkProvider;\n","import { createSelector } from '../../helpers';\n\nexport const getLink = createSelector('link');\n\nexport const getLinkTypeStyle = (theme, linktype, state) =>\n  getLink(theme)?.linkTypes?.[linktype]?.[state];\n\nexport const getLinkCommonStyle = theme => getLink(theme)?.common;\n","import styled, { css } from 'styled-components';\nimport { string } from 'prop-types';\nimport { getTextSizingStyle } from '../Typography/Text/textSelectors';\nimport { getLinkTypeStyle, getLinkCommonStyle } from './linkSelectors';\n\nconst propTypes = {\n  sizing: string.isRequired,\n  linktype: string.isRequired,\n};\n\nconst StyledLink = styled.a`\n  background-color: transparent;\n  border: none;\n  overflow: visible;\n  display: inline-block;\n  vertical-align: middle;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  font-family: inherit;\n  margin-bottom: 0;\n  &:hover {\n    outline: none;\n    text-decoration: underline;\n  }\n  ${({ theme, sizing, linktype }) => css`\n    ${getLinkCommonStyle(theme)}\n    ${getTextSizingStyle(theme, sizing)}\n    ${getLinkTypeStyle(theme, linktype, 'normal')}\n    &:hover {\n      ${getLinkTypeStyle(theme, linktype, 'hover')}\n    }\n  `}\n`;\n\nStyledLink.propTypes = propTypes;\n\nexport default StyledLink;\n","import React from 'react';\nimport { string, oneOf, oneOfType, func } from 'prop-types';\nimport StyledLink from './StyledLink';\n\nconst propTypes = {\n  /** sizings keys in the theme passed to <TypographyProvider /> */\n  sizing: string,\n  /** linkTypes keys in the theme passed to <LinkProvider /> */\n  linkType: string,\n  /** rendered html tag or custom router link component */\n  as: oneOfType([oneOf(['a', 'button']), func]),\n};\n\nconst Link = ({\n  sizing = 'm',\n  linkType: linktype = 'default',\n  as = 'a',\n  ...rest\n}) => <StyledLink sizing={sizing} linktype={linktype} as={as} {...rest} />;\n\nLink.propTypes = propTypes;\n\nexport default Link;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { TypographyProvider } from '../Typography';\nimport LinkProvider from './LinkProvider';\nimport Link from './Link';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"linkprovider\"\n    }}><strong parentName=\"h2\">{`LinkProvider`}</strong></h2>\n    <p><inlineCode parentName=\"p\">{`<LinkProvider />`}</inlineCode>{` is responsible for passing down the theme to the `}<inlineCode parentName=\"p\">{`<Link />`}</inlineCode>{` component. It expects the theme to be of certain structure.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"link\"\n    }}><strong parentName=\"h2\">{`Link`}</strong></h2>\n    <p>{`Link component grabs the theme given to `}<inlineCode parentName=\"p\">{`<LinkProvider />`}</inlineCode>{` and applies the style defined there based on the given `}<inlineCode parentName=\"p\">{`linkType`}</inlineCode>{` prop value.`}</p>\n    <Props of={Link} mdxType=\"Props\" />\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"example\"\n    }}><strong parentName=\"h3\">{`Example`}</strong></h3>\n    <Playground __position={1} __code={'() => {\\n  const theme = {\\n    linkTypes: {\\n      default: {\\n        normal: {\\n          color: \\'#1e88e5\\',\\n        },\\n        hover: {\\n          color: \\'#166dba\\',\\n        },\\n      },\\n      muted: {\\n        normal: {\\n          color: \\'#868e96\\',\\n        },\\n        hover: {\\n          color: \\'#6c747d\\',\\n        },\\n      },\\n    },\\n    common: {\\n      fontFamily: `\\'Inter var\\', sans-serif`,\\n    },\\n  }\\n  const Example = () => (\\n    /* TypographyProvider is required for LinkProvider to work */\\n    <TypographyProvider>\\n      <LinkProvider theme={theme}>\\n        <>\\n          <h2>Link types:</h2>\\n          <Link className=\\\"margin-bottom\\\">default link</Link>\\n          <Link linkType=\\\"muted\\\">muted link</Link>\\n        </>\\n      </LinkProvider>\\n    </TypographyProvider>\\n  )\\n\\n  return <Example />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TypographyProvider,\n      LinkProvider,\n      Link\n    }} mdxType=\"Playground\">\n  {() => {\n        const theme = {\n          linkTypes: {\n            default: {\n              normal: {\n                color: '#1e88e5'\n              },\n              hover: {\n                color: '#166dba'\n              }\n            },\n            muted: {\n              normal: {\n                color: '#868e96'\n              },\n              hover: {\n                color: '#6c747d'\n              }\n            }\n          },\n          common: {\n            fontFamily: `'Inter var', sans-serif`\n          }\n        };\n\n        const Example = () =>\n        /* TypographyProvider is required for LinkProvider to work */\n        <TypographyProvider mdxType=\"TypographyProvider\">\n    <LinkProvider theme={theme} mdxType=\"LinkProvider\">\n      <>\n        <h2>Link types:</h2>\n        <Link className=\"margin-bottom\" mdxType=\"Link\">default link</Link>\n        <Link linkType=\"muted\" mdxType=\"Link\">muted link</Link>\n      </>\n    </LinkProvider>\n  </TypographyProvider>;\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <hr></hr>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","export { default as TypographyProvider } from './TypographyProvider';\nexport { default as Text } from './Text/Text';\nexport { default as Heading } from './Heading/Heading';\nexport * from './typographySelectors';\n"],"sourceRoot":""}