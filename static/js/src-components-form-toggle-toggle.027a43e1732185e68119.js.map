{"version":3,"sources":["/home/travis/build/thegrinder/basic-styled-uikit/docz/Spacer.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/Icon.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/Spinner.js","/home/travis/build/thegrinder/basic-styled-uikit/docz/InputWrapper.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/ToggleLabel.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/ToggleCheckbox.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/ToggleSlider.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/Toggle.js","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/Toggle/Toggle.mdx","/home/travis/build/thegrinder/basic-styled-uikit/src/components/Form/formSelectors.js"],"names":["Spacer","styled","div","_templateObject","Icon","span","Icon_templateObject","loading","keyframes","Spinner_templateObject","propTypes","color","string","Spinner","_templateObject2","_ref","defaultProps","maxWidth","number","InputWrapper","InputWrapper_templateObject","ToggleLabel","label","h","isRequired","ToggleCheckbox","input","attrs","type","ToggleCheckbox_templateObject","rem","theme","css","getToggleStyle","disabled","bool","ToggleSlider","ToggleSlider_templateObject","_ref2","_ref3","_ref4","_ref5","Toggle","onChange","rest","Object","objectWithoutProperties","react_default","a","createElement","Toggle_ToggleLabel","Toggle_ToggleCheckbox","esm_extends","Toggle_ToggleSlider","MDXContent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","dist","name","id","index_esm","of","__position","__code","__scope","Playground","Props","docz","Form_Toggle_Toggle","React","Component","isMDXComponent","__webpack_require__","d","__webpack_exports__","getRegularInputCommonStyle","getRegularInputStyle","getMiscInputCommonStyle","getMiscInputStyle","getInlineInputCommonStyle","getInlineInputStyle","_theme_themeSelectors__WEBPACK_IMPORTED_MODULE_0__","getForm","regular","common","invalid","state","states","valid","misc","inline","toggle"],"mappings":"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","file":"static/js/src-components-form-toggle-toggle.70af9af5.js","sourcesContent":["import styled from 'styled-components';\n\nconst Spacer = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport default Spacer;\n","import styled from 'styled-components';\n\nconst Icon = styled.span`\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background-color: #222;\n  display: inline-block;\n  margin: 0 16px;\n`;\n\nexport default Icon;\n","import styled, { keyframes } from 'styled-components';\nimport { string } from 'prop-types';\n\nconst loading = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst propTypes = {\n  color: string,\n};\n\nconst defaultProps = {\n  color: '#fff',\n};\n\nconst Spinner = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 100%;\n  border: 2px solid ${({ color }) => color};\n  border-bottom-color: transparent;\n  animation: ${loading} 0.75s 0s infinite linear;\n  vertical-align: middle;\n  display: inline-block;\n`;\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\n\nexport default Spinner;\n","import styled from 'styled-components';\nimport { number } from 'prop-types';\n\nconst propTypes = {\n  maxWidth: number,\n};\n\nconst defaultProps = {\n  maxWidth: 300,\n};\n\nconst InputWrapper = styled.div`\n  max-width: ${({ maxWidth }) => maxWidth}px;\n`;\n\nInputWrapper.propTypes = propTypes;\nInputWrapper.defaultProps = defaultProps;\n\nexport default InputWrapper;\n","import styled from 'styled-components';\n\nconst ToggleLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport default ToggleLabel;\n","import styled, { css } from 'styled-components';\nimport { number } from 'prop-types';\nimport { getToggleStyle } from '../formSelectors';\nimport { rem } from '../../../theme/typography';\n\nconst propTypes = {\n  h: number.isRequired,\n};\n\nconst ToggleCheckbox = styled.input.attrs({\n  type: 'checkbox',\n})`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n  & + span:before {\n    left: ${rem(4)};\n  }\n  ${({ theme, h }) => css`\n    & + span {\n      ${getToggleStyle(theme, 'normal')}\n    }\n    &:checked + span {\n      ${getToggleStyle(theme, 'checked')}\n    }\n    &:checked + span:before {\n      left: calc(100% - ${rem(h - 4)});\n    }\n  `}\n`;\n\nToggleCheckbox.propTypes = propTypes;\n\nexport default ToggleCheckbox;\n","import styled from 'styled-components';\nimport { number, bool } from 'prop-types';\nimport { rem } from '../../../theme/typography';\n\nconst propTypes = {\n  h: number.isRequired,\n  disabled: bool.isRequired,\n};\n\nconst ToggleSlider = styled.span`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: ${({ h }) => rem(h)};\n  border-radius: 9999px;\n  transition: background-color .2s;\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    transition: left .2s;\n    bottom: 0;\n    margin: auto;\n    height: ${({ h }) => rem(h - 8)};\n    width: ${({ h }) => rem(h - 8)};\n    background-color: #fff;\n    border-radius: 100%;\n  }\n`;\n\nToggleSlider.propTypes = propTypes;\n\nexport default ToggleSlider;\n","import React from 'react';\nimport { number, bool, func } from 'prop-types';\nimport ToggleLabel from './ToggleLabel';\nimport ToggleCheckbox from './ToggleCheckbox';\nimport ToggleSlider from './ToggleSlider';\n\nconst propTypes = {\n  /** height of the Toggle */\n  h: number,\n  /** disabled flag */\n  disabled: bool,\n  /** onChange handler */\n  onChange: func.isRequired,\n};\n\nconst defaultProps = {\n  h: 34,\n  disabled: false,\n};\n\nconst Toggle = ({\n  h,\n  disabled,\n  onChange,\n  ...rest\n}) => (\n  <ToggleLabel>\n    <ToggleCheckbox\n      h={h}\n      onChange={onChange}\n      disabled={disabled}\n      {...rest}\n    />\n    <ToggleSlider h={h} disabled={disabled}/>\n  </ToggleLabel>\n);\n\nToggle.propTypes = propTypes;\nToggle.defaultProps = defaultProps;\n\nexport default Toggle;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, Props } from 'docz';\nimport Toggle from './Toggle';\nimport { InputWrapper } from '../../../../docz';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"toggle\"}}>{`Toggle`}</MDXTag>\n<Props of={Toggle} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"toggle-1\"}}>{`Toggle`}</MDXTag>\n<Playground __position={1} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle onChange={() => {}} />\\n</InputWrapper>'} __scope={{props: this ? this.props : props,Playground,Props,Toggle,InputWrapper}}>\n  <InputWrapper maxWidth={70}>\n    <Toggle onChange={() => {}} />\n  </InputWrapper>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"disabled-toggle\"}}>{`Disabled Toggle`}</MDXTag>\n<Playground __position={2} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle disabled={true} onChange={() => {}} />\\n</InputWrapper>'} __scope={{props: this ? this.props : props,Playground,Props,Toggle,InputWrapper}}>\n  <InputWrapper maxWidth={70}>\n    <Toggle disabled={true} onChange={() => {}} />\n  </InputWrapper>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"toggle-with-a-custom-height\"}}>{`Toggle with a custom height`}</MDXTag>\n<Playground __position={3} __code={'<InputWrapper maxWidth={70}>\\n  <Toggle h={24} onChange={() => {}} />\\n</InputWrapper>'} __scope={{props: this ? this.props : props,Playground,Props,Toggle,InputWrapper}}>\n  <InputWrapper maxWidth={70}>\n    <Toggle h={24} onChange={() => {}} />\n  </InputWrapper>\n</Playground>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  ","import { getForm } from '../../theme/themeSelectors';\n\nexport const getRegularInputCommonStyle = theme => getForm(theme).regular.common;\nexport const getRegularInputStyle = (theme, invalid, state) => {\n  const { states } = getForm(theme).regular;\n  return invalid\n    ? states.invalid\n    : states.valid[state];\n};\n\nexport const getMiscInputCommonStyle = theme => getForm(theme).misc.common;\nexport const getMiscInputStyle = (theme, invalid, state) => {\n  const { states } = getForm(theme).misc;\n  return invalid && state === 'normal'\n    ? states.invalid\n    : states.valid[state];\n};\n\nexport const getInlineInputCommonStyle = theme => getForm(theme).inline.common;\nexport const getInlineInputStyle = (theme, invalid, state) => {\n  const { states } = getForm(theme).inline;\n  return invalid\n    ? states.invalid\n    : states.valid[state];\n};\n\nexport const getToggleStyle = (theme, state) => getForm(theme).toggle.states[state];\n"],"sourceRoot":""}